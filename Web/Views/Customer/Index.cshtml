@model Web.ViewModels.CustomerFormViewModel

<link href="~/Content/chosen.min.css" rel="stylesheet" />

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-info">
            <div class="panel-heading">
                Customer Search
                <div class="pull-right">
                    <a class="btn btn-primary btn-sm pull-right">Create New Customer</a>
                </div>
            </div>
            <div class="panel-body">
                @using (Html.BeginForm("Index", "Customer", FormMethod.Post, new { @class = "form-inline" }))
                {
                    <div class="col-sm-12">
                        <div class="form-group col-sm-4">
                            <label>Name</label>
                            @Html.TextBoxFor(m => m.CustomerName, new { @class = "from-control input-sm cell", type = "Customer Name", placeholder = "Customer Name" })
                        </div>
                        <div class="form-group col-sm-4">
                            <label>Min date</label>
                            @Html.EditorFor(m => m.FromDate, new { htmlAttributes = new { @class = "datepicker form-control input-sm cell", id = "datepickerStart" } })
                        </div>
                        <div class="form-group col-sm-4">
                            <label>Max date</label>
                            @Html.EditorFor(m => m.ToDate, new { htmlAttributes = new { @class = "datepicker form-control input-sm cell", id = "datepickerEnd" } })
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group">
                            <label>Categories</label>
                            @Html.ListBoxFor(m => m.SelectedCategoryIds, Model.CategoryNames,
                                new { id = "multiselectDropdown", multiple = "multiple", @class = "from-control input-sm cell" })
                        </div>
                        <div class="form-group pull-right">
                            <button type="submit" class="btn btn-info pull-right"><i class="fa fa-search"></i>&nbsp;Search</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div id="main-list" class="col">
        @Html.Partial("CustomerList", Model.Customers);
    </div>
    <div id="details" class="hidden">
        @if (Model.SelectedCustomer != null)
        {
            @Html.Partial("CustomerDetails", Model.SelectedCustomer)
        }
    </div>
</div>


@section scripts {
    <script src="~/Scripts/chosen.jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            console.log("document.ready");

            var mainListElement = document.getElementById("main-list");
            var detailsElement = document.getElementById("details");

            @if(Model.SelectedCustomer != null) {
                @:mainListElement.className = "col-md-8";
                @:detailsElement.classList = "col-md-4";
            } else {
                @:mainListElement.className = "col";
                @:detailsElement.classList = "hidden";
            }
        });

        function RescaleLayout(){
            console.log("RescaleLayout()");

            @if(Model.SelectedCustomer != null) {
                @:mainListElement.className = "col-md-8";
                @:detailsElement.classList = "col-md-4";
            } else {
                @:mainListElement.className = "col";
                @:detailsElement.classList = "hidden";
            }
        }

        $(function () {
            $("#multiselectDropdown").chosen({
                max_selected_options: 3,
                inherit_select_classes: true,
                width: "95%"
              });
        });

        $(".datepicker").datepicker({
            dateFormat: "yy-mm-dd",
            changeMonth: true,
            changeYear: true,
            yearRange: "-20:+00",
            maxDate: '0'
        });
        $("#datepickerStart").datepicker({
            constrainInput: true,
            changeMonth: true,
            changeYear: true,
            firstDay: 1,
            numberOfMonths: 1,
            onClose: function (selectedDate, obj) {
                $("#datepickerEnd").datepicker("option", "minDate", new Date(selectedDate));
            }
        });
        $("#datepickerEnd").datepicker({
            constrainInput: true,
            changeMonth: true,
            changeYear: false,
            firstDay: 1,
            numberOfMonths: 1,
            onClose: function (selectedDate, obj) {
                console.log("datepickerEnd close");
                var index = obj.input.data("index");
                $("#datepickerStart").datepicker("option", "maxDate", selectedDate);
            }
        });
    </script>
}